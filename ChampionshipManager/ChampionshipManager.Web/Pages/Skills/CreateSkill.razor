@using ChampionshipManager.Db.Repository
@using ChampionshipManager.Db.Models

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SkillRepository SkillRepository
@inject OrganizerRepository OrganizerRepository

        Create new skill:<br/>

        <EditForm Model="@_skill" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator/>
            <ValidationSummary/>

            <InputText id="name" @bind-Value="_skill.Name"/>
            <InputNumber id="order" @bind-Value="_skill.Order"/>

            <button type="submit">Submit</button>
        </EditForm>


@code{

    [Parameter]
    public Action Refresh { get; set; }

    private Organizer _organizer;
    private Skill _skill = new Skill();
    
    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User;
        _organizer = OrganizerRepository.Filter(organizer => organizer.Name == user.Identity.Name, new List<string>{ nameof(Organizer.Skills)}).Single();
        _skill.Organizer = _organizer;
    }

    private void HandleValidSubmit()
    {
        SkillRepository.Create(_skill);
        Refresh?.Invoke();
    }

}