@using ChampionshipManager.Db.Models
@using ChampionshipManager.Web.Utils
@using ChampionshipManager.BusinessLayer.Services
@using ChampionshipManager.Web.Pages.Components

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject OrganizerService OrganizerService
@inject TeamService TeamService

@namespace ChampionshipManager.Web.Pages.Teams

<AuthorizeView>
    <Authorized>
        <br/>
        <br/>
        <div style="font-size: larger">Teams:</div>
        <div>
            <ul class="nav flex-column">
                <li class="nav-item px-3">
                    <div class="nav-link active">
                        <CreateTeam Refresh="@Refresh"/>
                    </div>
                </li>
                @foreach (var team in AllTeams)
                {
                    <li class="nav-item px-3">
                        <div class="nav-link">

                            <EditTeam Team="@team" OnRemove="@(() => RemoveTeam(team))"></EditTeam>

                        </div>
                    </li>
                }
            </ul>
        </div>

    </Authorized>


    <NotAuthorized>
        Please log in.
    </NotAuthorized>
</AuthorizeView>

@code
{
    private List<Team> AllTeams { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var organizerName = await AuthenticationStateProvider.GetUserName();
        AllTeams = OrganizerService.GetTeamsByName(organizerName);
    }

    private async Task RemoveTeam(Team team)
    {
        AllTeams.Remove(team);
        await TeamService.Delete(team);
        StateHasChanged();
    }

    private void Refresh()
    {
        StateHasChanged();
    }
}