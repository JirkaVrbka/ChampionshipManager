@page "/Competitors"
@using ChampionshipManager.Db.Models
@using ChampionshipManager.BusinessLayer.Services
@using ChampionshipManager.Web.Utils
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject OrganizerService OrganizerService

<AuthorizeView>
    <Authorized>
        <CreateCompetitor Refresh="@StateHasChanged"/>
        
        <br/>
        <br/>
        Competitors: <br/>
        @foreach (var competitor in _organizer.Competitors)
        {
            <br/>
            @competitor.Name
            <br/>
            
            @if (_organizer.BirthEnabled)
            {
                <div style="padding-left: 5em">@competitor.BirthDate</div>
            }
            @if (_organizer.GenderEnabled)
            {
                <div style="padding-left: 5em">@competitor.Gender</div>
            }
            @if (_organizer.SkillsEnabled)
            {
                <div style="padding-left: 5em">@competitor.Skill.Name</div>
            }
        }
    </Authorized>


    <NotAuthorized>
        Please log in.
    </NotAuthorized>
</AuthorizeView>

@code
{
    private Organizer _organizer;

    protected override async Task OnInitializedAsync()
    {
        var organizerName = await AuthenticationStateProvider.GetUserName();
        _organizer = OrganizerService.GetWithCompetitorsByName(organizerName);
    }
}
