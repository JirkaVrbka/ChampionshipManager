@page "/Tournament/{ChampionshipId}/{TournamentId}"
@using ChampionshipManager.Db.Models
@using ChampionshipManager.BusinessLayer.Services

@inject TournamentService TournamentService
@inject GameService GameService

<div class="row">
    <div class="responsiveColumn" style="font-size: larger">

        <div>1st place</div>
        <div></div>
        <div>2nd place</div>
        <div></div>
        <div>3rd place</div>
        <div></div>
        
        @foreach (var game in Games)
        {
            <button style="font-size: large;width: 250px" @onclick="@(() => SelectGame(game))">
                <span>@game.PlayerOne.Name</span> vs <span>@game.PlayerTwo.Name</span>
                <br/>
                <span>@game.PlayerOneScore</span> : <span>@game.PlayerTwoScore</span>
            </button>
        }
    </div>

    <div class="responsiveColumn second" style="font-size: larger">
        @if (SelectedGame != null)
        {
            <EditGame Refresh="StateHasChanged" SelectedGame="@SelectedGame"></EditGame>
        }

    </div>

</div>


@code{

    [Parameter]
    public string ChampionshipId { get; set; }

    [Parameter]
    public string TournamentId { get; set; }

    private List<Game> Games;

    private Game SelectedGame = null;

    protected override async Task OnInitializedAsync()
    {
        Games = GameService.GetByTournamentIdWithIncludes(TournamentId);
    }

    private void SelectGame(Game game)
    {
        SelectedGame = game;
        StateHasChanged();
    }
}