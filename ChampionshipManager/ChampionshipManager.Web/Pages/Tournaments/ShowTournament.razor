@page "/Tournament/{ChampionshipId}/{TournamentId}"
@using ChampionshipManager.Db.Models
@using ChampionshipManager.BusinessLayer.Services


@inject AuthenticationStateProvider AuthenticationStateProvider
@inject TournamentService TournamentService

@if (_tournament == null)
{
    <div>Something went wrong, please go <a href="/Championship/@ChampionshipId">back</a></div>
}
else
{
    <h3>@_tournament.Name</h3>
    <div>Competitors:</div>
    @foreach (var competitor in _tournament.Competitors)
    {
        <div>@competitor.Name</div>
    }
    <br/>
    
    <div>Games:</div>
    @foreach (var game in _tournament.Games)
    {
        <div>@game.PlayerOne.Name againts @game.PlayerTwo.Name</div>
        <div>@game.PlayerOneScore : @game.PlayerTwoScore</div>
    }
    
    <div><a href="/Championship/@ChampionshipId">Back</a></div>
}


@code{

    [Parameter]
    public string ChampionshipId { get; set; }

    [Parameter]
    public string TournamentId { get; set; }


    private Tournament? _tournament;

    protected override async Task OnInitializedAsync()
    {
        _tournament = TournamentService.GetWithAllIncludes(TournamentId);
        if (_tournament?.Championship.ID.ToString() != ChampionshipId)
        {
            _tournament = null;
        }
    }

}